import java.util.*;

/*
public class Point {
    int x;
    int y;
    public Point(int x, int y) {
        this.x = x;
        this.y = y;
    }
    public Point() {
        this.x = 0;
        this.y = 0;
    }
}*/
public class Bipartition {
    public double[] getBipartition(Point[] A, Point[] B) {
        // write code here
    double p1x1 = A[0].x;                                            
    double p1x2 = A[1].x == A[0].x ? A[2].x:A[1].x;                  
    double p1y1 = A[0].y;                                            
    double p1y2 = A[1].y == A[0].y ? A[2].y:A[1].y;                  
                                                                       
    // 求出第二个点不同的坐标(因为点的顺序可能是混乱的)                                     
    double p2x1 = B[0].x;                                            
    double p2x2 = B[1].x == B[0].x ? B[2].x:B[1].x;                  
    double p2y1 = B[0].y;                                            
    double p2y2 = B[1].y == B[0].y ? B[2].y:B[1].y;                  
                                                                       
    // 平分线的两个点                                                       
    double x1 = (double)(p1x2 + p1x1) / 2;                           
    double y1 = (double)(p1y2 + p1y1) / 2;                           
    double x2 = (double)(p2x1 + p2x2) / 2;                           
    double y2 = (double)(p2y1 + p2y2) / 2;                           
                                                                       
    double k = (double)(y2 - y1) / (x2 - x1);                        
    double b = y1 - k*x1;                                            
                                                                       
    return new double[] {k,b};
    }
}